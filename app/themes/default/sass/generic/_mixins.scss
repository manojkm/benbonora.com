/* ==========================================================================
   Sass Mixins
   ========================================================================== */

@mixin border-box {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
@mixin breakpoint-min($break) {
  @media (min-width: $break) { @content; }
}
@mixin breakpoint-max($break){
  @media (max-width: $break) { @content; }
}
@mixin breakpoint-min-max($breakmin, $breakmax){
  @media (min-width: $breakmin + 1) and (max-width: $breakmax - 1) { @content; }
}
//@mixin is-supported($property, $value){
//  @supports ($property: $value) { @content; }
//}
@mixin font($font-family, $font-weight: 400){
  font-family: $font-family;
  font-weight: $font-weight;
}
@mixin font-size($sizeValue: 1){
  font-size: ($sizeValue) + px;
  font-size: ($sizeValue / 16) + rem;
}
@mixin font-smoothing{
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
@mixin image-replace($display) {
  display: $display;
  text-indent: 200%;
  overflow: hidden;
  white-space: nowrap;
}
@mixin float-clear {
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}
@mixin visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin linear-gradient($start, $stop, $from: 0%, $to: 100%) {
  background: $start;
  background: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
  background: -moz-linear-gradient(center top, $start $from, $stop $to);
  background: -moz-gradient(center top, $start $from, $stop $to);
  background: -webkit-linear-gradient(top, $start $from,$stop $to);
  background: -o-linear-gradient(top, $start $from,$stop $to);
  background: -ms-linear-gradient(top, $start $from,$stop $to);
  background: linear-gradient(to bottom, $start $from,$stop $to);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}',GradientType=0 );
}

@mixin font-awesome($awesomeCode) {
  position: relative;
  &:before {
    content: $awesomeCode;
    display: inline-block;
    font-family: FontAwesome;
    font-style: normal;
    font-weight: normal;
    margin: 0 3px 0 0;
    text-decoration: inherit;
  }
}
@mixin container{
  position: relative;
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
  @include float-clear;
  @include breakpoint-min($tablet){
    padding-left: $padding-double;
    padding-right: $padding-double;
  }
}
@mixin link-underline($color){
  text-decoration: none;
  color: $color;
  &:hover, &:focus{
    text-decoration: underline;
  }

}
@mixin placeholder-color($color){
  &::-webkit-input-placeholder{
    color: $color;
  }
  &::-moz-placeholder{
    color: $color;
  }
  &:-moz-placeholder{
    color: $color;
  }
  &:-ms-input-placeholder
  {
    color: $color;
  }
}

